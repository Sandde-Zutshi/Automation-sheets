name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Lint and Test Next.js Application
  nextjs-ci:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      
    - name: Type check
      run: npx tsc --noEmit
      
    - name: Build application
      run: npm run build
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        GOOGLE_GEMINI_API_KEY: ${{ secrets.GOOGLE_GEMINI_API_KEY }}
        LANGEXTRACT_SERVICE_URL: ${{ secrets.LANGEXTRACT_SERVICE_URL }}

  # Test Python LangExtract Service
  python-ci:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Python dependencies
      run: |
        cd python-service
        pip install -r requirements.txt
        
    - name: Run Python tests
      run: |
        cd python-service
        python -m pytest tests/ -v
      env:
        GOOGLE_GEMINI_API_KEY: ${{ secrets.GOOGLE_GEMINI_API_KEY }}

  # Security scan
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run security scan
      uses: github/codeql-action/init@v2
      with:
        languages: javascript, python
        
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

  # Docker build test
  docker-build:
    runs-on: ubuntu-latest
    needs: [nextjs-ci, python-ci]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Next.js Docker image
      run: docker build -t blood-test-analysis-nextjs .
      
    - name: Build Python service Docker image
      run: docker build -t blood-test-analysis-python ./python-service

  # Deploy to staging (on main branch)
  deploy-staging:
    runs-on: ubuntu-latest
    needs: [nextjs-ci, python-ci, security-scan, docker-build]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Vercel (Staging)
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        GOOGLE_GEMINI_API_KEY: ${{ secrets.GOOGLE_GEMINI_API_KEY }}
        LANGEXTRACT_SERVICE_URL: ${{ secrets.LANGEXTRACT_SERVICE_URL }}

  # Notify on failure
  notify-failure:
    runs-on: ubuntu-latest
    needs: [nextjs-ci, python-ci, security-scan, docker-build]
    if: failure()
    
    steps:
    - name: Notify failure
      run: |
        echo "CI/CD pipeline failed!"
        echo "Check the logs for more details." 